<!DOCTYPE html>
<html>
<head>
  <title>Facebook Wall Insights</title>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="ct" content="<$= ct $>">
  <link rel="shortcut icon" href="/images/favicon.ico" type="image/x-icon">
  <link rel="icon" href="/images/favicon.ico" type="image/x-icon">
  <link rel="stylesheet" href="css/style.css">
  <script type="text/javascript" src="https://www.google.com/recaptcha/api.js"></script>
  <script type="text/javascript" src="https://code.jquery.com/jquery-2.2.0.min.js"></script>
</head>

<body>
  <script>
    // This is called with the results from from FB.getLoginStatus().
    function statusChangeCallback(response) {
      console.log('statusChangeCallback');
      console.log(response);
      // The response object is returned with a status field that lets the
      // app know the current login status of the person.
      // Full docs on the response object can be found in the documentation
      // for FB.getLoginStatus().
      if (response.status === 'connected') {
        // Logged into your app and Facebook.
        testAPI();
      } else if (response.status === 'not_authorized') {
        // The person is logged into Facebook, but not your app.
        document.getElementById('inputText').innerHTML = 'Please log ' +
          'into this app.';
      } else {
        // The person is not logged into Facebook, so we're not sure if
        // they are logged into this app or not.
        document.getElementById('inputText').innerHTML = 'Please log ' +
          'into Facebook.';
      }
    }

    // This function is called when someone finishes with the Login
    // Button.  See the onlogin handler attached to it in the sample
    // code below.
    function checkLoginState() {
      FB.getLoginStatus(function(response) {
        statusChangeCallback(response);
      });
    }

    window.fbAsyncInit = function() {
    FB.init({
      appId      : '1659268791013008',
      cookie     : true,  // enable cookies to allow the server to access
                          // the session
      xfbml      : true,  // parse social plugins on this page
      version    : 'v2.2' // use version 2.2
    });

    // Now that we've initialized the JavaScript SDK, we call
    // FB.getLoginStatus().  This function gets the state of the
    // person visiting this page and can return one of three states to
    // the callback you provide.  They can be:
    //
    // 1. Logged into your app ('connected')
    // 2. Logged into Facebook, but not your app ('not_authorized')
    // 3. Not logged into Facebook and can't tell if they are logged into
    //    your app or not.
    //
    // These three cases are handled in the callback function.

    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });

    };

    // Load the SDK asynchronously
    (function(d, s, id) {
      var js, fjs = d.getElementsByTagName(s)[0];
      if (d.getElementById(id)) return;
      js = d.createElement(s); js.id = id;
      js.src = "//connect.facebook.net/en_US/sdk.js";
      fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));

    // Here we run a very simple test of the Graph API after login is
    // successful.  See statusChangeCallback() for when this call is made.
    function testAPI() {
      console.log('Welcome!  Fetching your information.... ');
      getFBPosts();
      //only getting 274? back tho..
    }
    function getFBPosts() {

      var posts;
      FB.api(
        '/me/feed?limit=1000',
        'GET',
        {"fields":"message"},
        function(response) {
          var x = 0;
          for(var k in response.data) {
            var post = response.data[k].message;
            if(post=="undefined" || post==null || post==undefined){
              post = "";
            }
              posts+="\n "+post;
            x++;
          }
          document.getElementById('inputText').value = posts;
          console.log("got posts: "+posts);
            // Insert your code here
        }
      );
    }
  </script>
  <div class="_demo--banner">
    <div class="_demo--container">
      <div class="banner--service-icon-container">
        <img class="banner--service-icon" src="images/service-icon.svg" alt="Personality Insights API Icon">
      </div>
      <div class="banner--service-info">
        <h1 class="banner--service-title base--h1">
          <img class="banner--service-icon_INLINE" src="images/service-icon.svg" alt="Personality Insights API Icon"> Facebook Wall Insights
        </h1>
        <div class="banner--service-description">
          Find out what your Facebook wall says about you with IBM's amazing Personality Insights service!
          For statistically significant results, you need at least 3500 words and ideally 6000.
          You can still try this out if you have at least 100 words, but the results may not be as accurate.
        </div>
      </div>
    </div>
  </div>


  <div class="_demo--container">
    <div class="_content input">
      <!--
        Below we include the Login Button social plugin. This button uses
        the JavaScript SDK to present a graphical Login button that triggers
        the FB.login() function when clicked.
      -->  <fb:login-button scope="public_profile,email,user_posts" onlogin="checkLoginState();" data-max-rows="1" data-size="large" data-show-faces="true" data-auto-logout-link="false">
        </fb:login-button>
      <div class="tab-panels" role="tabpanel">
        <span class="input--reset icon-hyperlink">
          <span class="icon icon-reset"></span>
          <button class="base--a icon-hyperlink--button icon-hyperlink--button_BLANK input--reset-button" href="" type="reset">
            Reset
          </button>
        </span>
         <!-- body of text title here-->
        <div class="tab-panels--tab-content">
          <div id="text-panel" class="tab-panels--tab-pane active" role="tab-panel">
            <form class="input--form2">
              <textarea id="inputText" class="base--textarea input--text-area" placeholder="Please enter text to analyze (minimum of 100 words)...">
              </textarea>
              <div class="input--button-container">
                <div id="languageChooser" class="input--language-chooser smartphone-hidden" style="display:none">
                  <div class="base--h5 input--choose">Choose language:</div>

                  <input role="radio" class="base--radio" type="radio" id="lang-en" name="text-lang" value="en"/>
                  <label class="base--inline-label" for="lang-en">English</label>
                  <input role="radio" class="base--radio" type="radio" id="lang-es" name="text-lang" value="es"/>
                  <label class="base--inline-label" for="lang-es">Spanish</label>
                  <input role="radio" class="base--radio" type="radio" id="lang-ar" name="text-lang" value="ar"/>
                  <label class="base--inline-label" for="lang-ar" style="display:none;">Arabic</label>
                </div>

                <button type="submit" class="base--button input--submit-button2">Analyze</button>
              </div>

            </form>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="_demo--bg-container">
    <div class="_demo--container">
      <div class="_content">
        <h3 class="base--h3 output--header">Output</h3>
        <div class="loading">
          <div class="loading--icon">
            <img src="images/loading-indicator.gif" width="100%" alt="">
          </div>
        </div>
        <div class="error">
          <p class="error--message">Error!</p>
        </div>
        <div class="output">
          <p class="base--p">The scores you see are all percentiles. They are comparing one person to a broader population. For example, a 90% on Extraversion does not mean that the person is 90% extroverted. It means that for that single trait, the person is more extroverted than 90% of the people in the population.</p>
          <h2 class="base--h2">Personality Portrait</h2>
          <h4 class="base--h4 output--word-count-header"><span class="output--word-count-number">0</span> words analyzed:
            <div class="output--word-count-message output--word-count-message_VERY-STRONG">Very Strong Analysis
              <div class="output--word-count-tooltip_VERY-STRONG tooltip">A word count of 6000 or more is a high-quality assessment of someone's personality. It's statistically significant.</div>
            </div>
            <div class="output--word-count-message output--word-count-message_STRONG">Strong Analysis
              <div class="output--word-count-tooltip_STRONG tooltip">This is a confident read of someone's personality. It's statistically significant! ...but wait, there's more! For only 6000 words, you'll get something so accurate it's scary. Do it!</div>
            </div>
            <div class="output--word-count-message output--word-count-message_DECENT">Decent Analysis
              <div class="output--word-count-tooltip_DECENT tooltip">These results are a general impression of this person, and they should be taken with a grain of salt. Increase the word count to 3500 to get a strong one.</div>
            </div>
            <div class="output--word-count-message output--word-count-message_WEAK">Weak Analysis
              <div class="output--word-count-tooltip_WEAK tooltip">With this many words, you can't get a fair read on someone's personality. Can you use at least 1500 to get a general impression?</div>
            </div>
          </h4>
          <div class="output-summary">
            <div class="output-summary--left">
              <h4 class="base--h4">Summary</h4>
              <div id="personalitySummary" class="output-summary--summary">
                <p class="base--p">Analyze your profile to get your personality summary.</p>
              </div>
            </div>
            <div class="output-summary--right">
              <div class="output-summary--likely-behaviors--section">
                <h4 class="base--h4">You are likely to______</h4>
                <div class="output-summary--likely-behaviors"></div>
              </div>
              <div class="output-summary--unlikely-behaviors--section">
                <h4 class="base--h4">You are unlikely to______</h4>
                <div class="output-summary--unlikely-behaviors"></div>
              </div>
              <div class="output-summary--no-behaviors--section">
                <h4 class="base--h4">This portrait does not relate to any distinguishing behavior*</h4>
                <p class="base--p">*from those in the studies considered for this demo.</p>
              </div>
            </div>
          </div>
          <div class="output--stats-row">
            <div class="output-big-5 output-stats-column">
              <h4 class="base--h4">Personality</h4>
              <div class="output-stats-column--percentile-label">*% = percentile</div>
              <div class="output-big-5--traits output-stats-column--traits"></div>
            </div>
            <div class="output-needs output-stats-column">
              <h4 class="base--h4">Consumer Needs</h4>
              <div class="output-stats-column--percentile-label">*% = percentile</div>
              <div class="output-needs--traits output-stats-column--traits"></div>
              <div class="output-needs--more-traits"></div>
              <a class="output-needs--toggle output-stats-column--toggle base--a" href="javascript:void(0);">See more</a>
            </div>
            <div class="output-values output-stats-column">
              <h4 class="base--h4">Values</h4>
              <div class="output-stats-column--percentile-label">*% = percentile</div>
              <div class="output-values--traits output-stats-column--traits"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script type="text/html" id="big5PercentTemplate">
    <% _.each(items, function(item, key, list) { %>
      <% if (typeof list[key - 1] != 'undefined' && (list[key - 1].score >= 50 && item.score < 50)) { %>
        <hr class="base--hr output-stats-column--hr">
        <% } %>
          <div class="percent-bar-and-score">
            <div class="percent-bar-and-score--label output-big-5--trait-label <%= (item.score >= 50) ? 'output-big-5--trait-label_POSITIVE' : 'output-big-5--trait-label_NEGATIVE' %>">
              <%= item.name %>
              <i class="icon icon-down-arrow percent-bar-and-score--toggle-icon"></i>
              <div class="tooltip"><%= tooltips[item.name] != null ? tooltips[item.name] : 'Tooltip not available.' %></div>
            </div>
            <div class="percent-bar percent-bar-and-score--percent-bar">
              <div class="percent-bar--meter" style="-webkit-transform: translate(<%= item.score %>%); transform: translate(<%= item.score %>%)">
                <div class="percent-bar--ball <%= (item.score >= 50) ? 'percent-bar--ball_POSITIVE-FILL' : 'percent-bar--ball_NEGATIVE-FILL' %>"></div>
                <div class="percent-bar-and-score--number">
                  <%= item.score %>%</div>
              </div>
            </div>
          </div>
          <div class="output-big-5--sub-tree">
            <% _.each(item.children, function(item2, key, list) { %>
              <div class="percent-bar-and-score">
                <div class="percent-bar-and-score--label output-big-5--sub-trait-label <%= (item2.score >= 50) ? 'output-big-5--sub-trait-label_POSITIVE' : 'output-big-5--sub-trait-label_NEGATIVE' %>">
                  <%= item2.name %>
                  <div class="tooltip"><%= tooltips[item2.name] != null ? tooltips[item2.name] : 'Tooltip not available.' %></div>
                </div>
                <div class="percent-bar percent-bar-and-score--percent-bar">
                  <div class="percent-bar--meter" style="-webkit-transform: translate(<%= item.score %>%); transform: translate(<%= item2.score %>%)">
                    <div class="percent-bar--ball <%= (item2.score >= 50) ? 'percent-bar--ball_POSITIVE-FILL' : 'percent-bar--ball_NEGATIVE-FILL' %>"></div>
                    <div class="percent-bar-and-score--number">
                  <%= item2.score %>%</div>
                  </div>
                </div>
              </div>
              <% }); %>
          </div>
          <% });%>
  </script>

  <script type="text/html" id="outputStatsPercentTemplate">
    <% _.each(items, function(item, key, list) { %>
      <% if (typeof list[key - 1] != 'undefined' && (list[key - 1].score >= 50 && item.score < 50)) { %>
        <hr class="base--hr output-stats-column--hr">
        <% } %>
          <div class="percent-bar-and-score">
            <div class="percent-bar-and-score--label <%= (item.score >= 50) ? 'percent-bar-and-score--label_POSITIVE' : 'percent-bar-and-score--label_NEGATIVE' %>">
              <%= item.name %>
              <div class="tooltip"><%= tooltips[item.name] != null ? tooltips[item.name] : 'Tooltip not available.' %></div>
            </div>
            <div class="percent-bar percent-bar-and-score--percent-bar">
              <div class="percent-bar--meter" style="-webkit-transform: translate(<%= item.score %>%); transform: translate(<%= item.score %>%)">
                <div class="percent-bar--ball <%= (item.score >= 50) ? 'percent-bar--ball_POSITIVE-FILL' : 'percent-bar--ball_NEGATIVE-FILL' %>"></div>
                <div class="percent-bar-and-score--number">
                  <%= item.score %>%</div>
              </div>
            </div>
          </div>
          <% });%>
  </script>

  <script type="text/html" id="outputBehaviorsTemplate">
    <% _.each(items, function(item, key, list) { %>
      <div class="output-summary--behavior <%= item.score > 0.5 ? 'output-summary--behavior_POSITIVE' : 'output-summary--behavior_NEGATIVE' %>">
        <i class="icon <%= item.score > 0.5 ? 'icon-likely' : 'icon-not-likely' %>"></i>
        <%= item.name %>
        <div class="tooltip"><%= item.tooltip %><div class="tooltip--hover-fix"></div></div>
      </div>
      <% }); %>
  </script>

  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.3/modernizr.min.js"></script>
  <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery-url-parser/2.3.1/purl.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.4.4/underscore-min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/markdown-it/5.0.2/markdown-it.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.0.0/highlight.min.js"></script>

  <script type="text/javascript" src="./js/vendors/q.js"></script>
  <script type="text/javascript" src="./js/components/q_util.js"></script>
  <script type="text/javascript" src="js/components/text-summary.js"></script>
  <script type="text/javascript" src="js/components/dictionary.standalone.js"></script>
  <script type="text/javascript" src="js/components/personality-insights-profile.0.1.0.js"></script>
  <script type="text/javascript" src="js/components/personality-insights-trait-tooltips.standalone.js"></script>
  <script type="text/javascript" src="js/components/tab-panels.js"></script>

  <script type="text/javascript" src="js/demo.js"></script>
  <script type="text/javascript" src="js/ga.js"></script>
</body>
</html>
